name: Update YouTube Channel Stats

on:
  schedule:
    - cron: '0 0 * * *'  # ‚è∞ Runs daily at midnight UTC
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run the fetch script
        run: python fetch_channel_stats.py

      - name: Generate top 100 JSON
        run: python generate_top_100_channels.py

      - name: Commit updated JSON using GitHub API
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const fs = require('fs');
            const files = ['top_youtube_channels_stats.json', 'top_100_youtube_channels.json'];

            const treeItems = [];
            for (const file of files) {
              const content = fs.readFileSync(file, 'utf8');
              const blob = await github.rest.git.createBlob({
                owner: context.repo.owner,
                repo: context.repo.repo,
                content: Buffer.from(content).toString('base64'),
                encoding: 'base64'
              });
              treeItems.push({
                path: file,
                mode: '100644',
                type: 'blob',
                sha: blob.data.sha
              });
            }

            const ref = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main'
            });

            const commit = await github.rest.git.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: ref.data.object.sha
            });

            const tree = await github.rest.git.createTree({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base_tree: commit.data.tree.sha,
              tree: treeItems
            });

            const newCommit = await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              message: 'Daily update: full and top 100 stats',
              tree: tree.data.sha,
              parents: [ref.data.object.sha]
            });

            await github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main',
              sha: newCommit.data.sha
            });
