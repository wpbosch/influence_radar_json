name: Update YouTube Channel Stats

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at 5AM South African time
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Run the fetch script
        run: python fetch_channel_stats.py

      - name: Commit updated JSON using GitHub API
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const fs = require('fs');
            const path = 'top_youtube_channels_stats.json';
            const content = fs.readFileSync(path, 'utf8');
            const encoded = Buffer.from(content).toString('base64');

            const { data: refData } = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main'
            });

            const { data: latestCommit } = await github.rest.git.getCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: refData.object.sha
            });

            const { data: blobData } = await github.rest.git.createBlob({
              owner: context.repo.owner,
              repo: context.repo.repo,
              content: encoded,
              encoding: 'base64'
            });

            const { data: treeData } = await github.rest.git.createTree({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base_tree: latestCommit.tree.sha,
              tree: [
                {
                  path,
                  mode: '100644',
                  type: 'blob',
                  sha: blobData.sha
                }
              ]
            });

            const { data: newCommit } = await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              message: 'Daily update of YouTube stats',
              tree: treeData.sha,
              parents: [refData.object.sha]
            });

            await github.rest.git.updateRef({
              owner: context.repo.owner,
              repo: context.repo.repo,
              ref: 'heads/main',
              sha: newCommit.sha
            });

        - name: Generate top 100 JSON
          run: python generate_top_100_channels.py


